# Generated by Django 2.0.2 on 2018-02-28 18:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='appliances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applianceid', models.IntegerField()),
                ('sensorid', models.IntegerField()),
                ('powerusage', models.IntegerField()),
                ('powerrate', models.IntegerField()),
                ('appliancename', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='dailyusage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('totalwaterusage', models.FloatField()),
                ('totalpowerusage', models.IntegerField()),
                ('totalpowercost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('totalwatercost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('totalhvacusage', models.FloatField()),
                ('totalhvaccost', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='energyusage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.TimeField()),
                ('sensorid', models.IntegerField()),
                ('endtimestamp', models.TimeField()),
                ('usage', models.IntegerField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='hvacusage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.TimeField()),
                ('sensorid', models.IntegerField()),
                ('endtimestamp', models.TimeField()),
                ('usage', models.FloatField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('temperature', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='rooms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roomid', models.IntegerField()),
                ('roomname', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='sensors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensorid', models.IntegerField()),
                ('sensorname', models.CharField(max_length=50)),
                ('sensorstate', models.IntegerField()),
                ('roomid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='waterusage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.TimeField()),
                ('sensorid', models.IntegerField()),
                ('endtimestamp', models.TimeField()),
                ('usage', models.FloatField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='weather',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.TimeField()),
                ('temperature', models.FloatField()),
                ('precipitation', models.FloatField()),
                ('chanceofprecipitation', models.FloatField()),
                ('state', models.CharField(max_length=50)),
            ],
        ),
    ]
